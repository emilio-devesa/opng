<?xml version="1.0" ?>
<root>

<rule name="None" />

<rule name="Java/C/C++">
	<!-- Keywords -->
	<class style="bold" color="blue">
		<token>asm</token>
		<token>auto</token>
		<token>bool</token>
		<token>break</token>
		<token>case</token>
		<token>catch</token>
		<token>char</token>
		<token>class</token>
		<token>const</token>
		<token>const_cast</token>
		<token>continue</token>
		<token>default</token>
		<token>delete</token>
		<token>do</token>
		<token>double</token>
		<token>dynamic_cast</token>
		<token>else</token>
		<token>enum</token>
		<token>explicit</token>
		<token>extern</token>
		<token>false</token>
		<token>float</token>
		<token>for</token>
		<token>friend</token>
		<token>goto</token>
		<token>if</token>
		<token>inline</token>
		<token>int</token>
		<token>long</token>
		<token>namespace</token>
		<token>new</token>
		<token>operator</token>
		<token>private</token>
		<token>protected</token>
		<token>public</token>
		<token>register</token>
		<token>reinterpret_cast</token>
		<token>return</token>
		<token>short</token>
		<token>signed</token>
		<token>sizeof</token>
		<token>static</token>
		<token>static_cast</token>
		<token>struct</token>
		<token>switch</token>
		<token>template</token>
		<token>this</token>
		<token>throw</token>
		<token>try</token>
		<token>typedef</token>
		<token>typeid</token>
		<token>true</token>
		<token>union</token>
		<token>unsigned</token>
		<token>using</token>
		<token>void</token>
		<token>volatile</token>
		<token>while</token>
        </class>

        <!-- Comments -->
        <class color="green">
		<range start="/*" end="*/" />
		<range start="//" end="\n" />
        </class>

	<!-- Strings -->
	<class color="purple">
		<range start='"' end='"' escape="\" />
		<range start="'" end="'" escape="\" />
	</class>

	<!-- Preprocessor directives -->
	<class color="gray">
		<range start="#" end="\n" />
	</class>

	<!-- Symbols -->
	<class color="blue" style="bold">
		<token any="1">*</token>
		<token any="1">/</token>
		<token any="1">+</token>
		<token any="1">-</token>
		<token any="1">\</token>
		<token any="1">[</token>
		<token any="1">]</token>
		<token any="1">(</token>
		<token any="1">)</token>
		<token any="1">=</token>
		<token any="1">!</token>
		<token any="1">&gt;</token>
		<token any="1">&lt;</token>
		<token any="1">{</token>
		<token any="1">}</token>
		<token any="1">.</token>
		<token any="1">;</token>
		<token any="1">,</token>
		<token any="1">:</token>
		<token any="1">&amp;</token>
	</class>
</rule>


<rule name="Pascal">
	<!-- Keywords -->
	<class style="bold" color="maroon">
		<token>program</token>
		<token>module</token>
		<token>unit</token>
		<token>input</token>
		<token>output</token>
		<token>standardinput</token>
		<token>standardoutput</token>
		<token>begin</token>
		<token>end</token>
		<token>function</token>
		<token>procedure</token>
		<token>const</token>
		<token>type</token>
		<token>var</token>
		<token>integer</token>
		<token>char</token>
		<token>real</token>
		<token>boolean</token>
		<token>string</token>
		<token>interface</token>
		<token>implementation</token>
		<token>if</token>
		<token>then</token>
		<token>else</token>
		<token>case</token>
		<token>of</token>
		<token>repeat</token>
		<token>until</token>
		<token>for</token>
		<token>while</token>
		<token>do</token>
		<token>true</token>
		<token>false</token>
		<token>and</token>
		<token>or</token>
		<token>not</token>
		<token>and_then</token>
		<token>import</token>
		<token>export</token>
		<token>new</token>
		<token>dispose</token>
		<token>array</token>
		<token>record</token>
		<token>file</token>
		<token>text</token>
		<token>rewrite</token>
		<token>reset</token>
		<token>extend</token>
		<token>lastposition</token>
		<token>seekread</token>
		<token>seekwrite</token>
		<token>read</token>
		<token>write</token>
		<token>update</token>
		<token>put</token>
		<token>get</token>
		<token>writeln</token>
		<token>readln</token>
		<token>to</token>
		<token>downto</token>
		<token>bindingtype</token>
		<token>bind</token>
		<token>unbind</token>
		<token>binding</token>
		<token>otherwise</token>
		<token>complex</token>
        </class>

        <!-- Comments -->
        <class color="blue">
		<range start="{" end="}" />
		<range start="" end="" />
        </class>

	<!-- Strings -->
	<class color="purple">
		<range start='"' end='"' escape="\" />
		<range start="'" end="'" escape="\" />
	</class>

	<!-- Preprocessor directives -->
	<class color="green">
		<range start="#" end="\n" />
	</class>

	<!-- Symbols -->
	<class color="maroon" style="bold">
		<token any="1">*</token>
		<token any="1">/</token>
		<token any="1">+</token>
		<token any="1">-</token>
		<token any="1">\</token>
		<token any="1">[</token>
		<token any="1">]</token>
		<token any="1">(</token>
		<token any="1">)</token>
		<token any="1">=</token>
		<token any="1">!</token>
		<token any="1">&gt;</token>
		<token any="1">&lt;</token>
		<token any="1">{</token>
		<token any="1">}</token>
		<token any="1">.</token>
		<token any="1">;</token>
		<token any="1">,</token>
		<token any="1">:</token>
		<token any="1">&amp;</token>
	</class>
</rule>

</root>
